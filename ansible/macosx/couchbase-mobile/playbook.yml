---
- hosts: all
  user: "{{ ansible_ssh_user }}"

  vars:
    azul_jdk_name: "{{ 'zulu16.30.15-ca-jdk16.0.1-macosx_aarch64' if ansible_architecture == 'arm64' else 'zulu16.30.15-ca-jdk16.0.1-macosx_x64' }}"
    homebrew_dir: "{{ '/usr/local' if ansible_architecture == 'x86_64' else '/opt/homebrew' }}"

  pre_tasks:
    - name: Add passwordless sudoer
      copy:
        src=./files/cbsudo dest=/private/etc/sudoers.d/cbsudo
      become: true

  tasks:

    - name: Check jenkins_jnlp_secret
      fail:
        msg: "'jenkins_jnlp_secret' is not defined or empty"
      when: (jenkins_jnlp_secret is not defined) or (jenkins_jnlp_secret|length == 0)

    - name: Check jenkins_node_name
      fail:
        msg: "'jenkins_node_name' is not defined or empty"
      when: (jenkins_node_name is not defined) or (jenkins_node_name|length == 0)

    - debug: msg="Installing homebrew.  This will take a while"

    - name: Install homebrew
      shell: |
        yes| /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    - name: Disable analytics
      shell: ./brew analytics off
      args:
        chdir: "{{ homebrew_dir }}/bin"

    - debug: msg="Installing homebrew packages "

    - name: Install homebrew packages
      community.general.homebrew: name={{ item }} state=latest
      with_items:
          - bash-completion
          - carthage
          - ccache
          - cmake
          - coreutils
          - doxygen
          - git
          - openssl
          - pass
          - python
          - ssh-copy-id
          - wget

    - name: Set python3 as default
      file:
        src: "{{ homebrew_dir }}/bin/python3"
        dest: "{{ homebrew_dir }}/bin/python"
        state: link


    - name: Set energy saving to zero
      shell: systemsetup -setcomputersleep Never
      become: true

    - name: Set user screensaver
      shell: defaults -currentHost write com.apple.screensaver idleTime 5

    - name: Disable logon screensaver
      shell: defaults -currentHost write com.apple.screensaver loginWindowIdleTime 0
      become: true

    - name: Add .zshenv
      copy:
        src=./files/zshenv dest=/Users/{{ ansible_ssh_user }}/.zshenv owner={{ ansible_ssh_user }} group=staff mode=0644

    # SGW require pkg
    - name: Install pip
      shell: "{{ homebrew_dir }}/bin/pip3 install pyinstaller"
      ignore_errors: yes

    # Required for CBL iOS doc generation
    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items:
          - jazzy
          - xcpretty
          - slather

    # instlall xcversion, which can be used to manage xcode installation from command line
    - name: Install xcversion
      gem: name={{ item }} state=latest
      with_items:
          - xcode-install

    - name: Create .ssh directory
      file: path=/Users/{{ ansible_ssh_user }}/.ssh state=directory owner={{ ansible_ssh_user }} mode=0700

    - name: Copy SSH config files
      copy:
        src=./ssh/{{ item }} dest=/Users/{{ ansible_ssh_user }}/.ssh/{{ item }} owner={{ ansible_ssh_user }} group=staff mode=0600
      with_items:
        - authorized_keys
        - buildbot_id_dsa
        - config
        - id_ns-codereview
        - ns-buildbot.rsa
        - patch_via_gerrit.ini

    - name: Copy .gitconfig file
      copy:
        src=./files/gitconfig
        dest=/Users/{{ ansible_ssh_user }}/.gitconfig owner="{{ ansible_ssh_user }}" group=staff mode=0644

    - name: Copy Mobile jenkins's CB developer profile
      copy:
          src=./files/jenkins-appledeveloper.developerprofile  dest=/Users/{{ ansible_ssh_user }}/Downloads/jenkins-appledeveloper.developerprofile  owner="{{ ansible_ssh_user }}" group=staff mode=0644

    - name: Copy Codesign Cert
      copy:
        src=./files/{{ p12_cert_file }}
        dest=/Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }}

    - name: Import certificate
      shell: |
        security unlock-keychain -p {{ansible_ssh_pass }} /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain
        security import /Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }} -k /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain -P {{ p12_cert_password }} -A
        rm -f /Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }}
      args:
        executable: /bin/bash

    # Run command to enable xcode codesign to access keychain
    - name: Enable keychain Acess
      shell: |
        security set-key-partition-list -S apple-tool:,apple: -s -k {{ ansible_ssh_user }}  ~/Library/Keychains/login.keychain-db
      args:
        executable: /bin/bash

    - name: Install jdk
      shell: |
        cd /usr/local
        curl -OL https://cdn.azul.com/zulu/bin/{{ azul_jdk_name }}.tar.gz
        tar -xzf {{ azul_jdk_name }}.tar.gz
        rm -rf {{ azul_jdk_name }}.tar.gz
        ln -s /usr/local/{{ azul_jdk_name }}/bin/java /usr/local/bin/java
        ln -s /usr/local/{{ azul_jdk_name }}/bin/javac /usr/local/bin/javac
      become: true

    - name: Creates jenkins directory
      file:
        path: /Users/{{ ansible_ssh_user }}/jenkins
        state: directory

    - name: Install jenkins startup script
      template:
        src=./files/jnlp.sh.j2 dest=/Users/{{ ansible_ssh_user }}/jenkins/jnlp.sh owner={{ ansible_ssh_user }} group=staff mode=0755

    - name: Write secret file
      shell: echo {{ jenkins_jnlp_secret }} > /Users/{{ ansible_ssh_user }}/jenkins/secret-file

    - name: Install jenkins autolaunch plist
      copy:
        src=./files/mobile.jenkins.plist dest=/Library/LaunchAgents/mobile.jenkins.plist
      become: true

    - name: Enable autologin for couchbase user
      script: 
        cmd: ./files/autologin.py --username {{ ansible_ssh_user }} --password {{ ansible_ssh_pass }}
        executable: python3
      become: true
